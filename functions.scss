// the function takes the $selector-scope and $theme as parameters. It first retrieves the selector configuration from $op-config and the theme values from $op-theme. Based on the provided $selector-scope, it generates the appropriate selector output and adds the theme values accordingly. If the $theme is 'dark', it also includes the dark mode media query.
@use 'config' as _c;

@function generate-output($selector-scope, $theme) {
  $selector-config: map-get($op-config, 'selector-scope');
  $theme-values: map-get($op-theme, $theme);

  $selector-output: '';

  @if ($selector-scope == 'where') {
    $selector-output: ":where#{map-get($selector-config, 'where')} {\n";
  } @else if ($selector-scope == 'root') {
    $selector-output: ":root {\n";
  } @else if ($selector-scope == 'host') {
    $selector-output: ":host#{map-get($selector-config, 'host')} {\n";
  } @else if ($selector-scope == 'null') {
    $selector-output: "#{map-get($selector-config, 'null')} {\n";
  }

  $output: '';

  @if ($selector-output != '') {
    $output: $selector-output +
      "  --shadow-color: #{map-get($theme-values, 'shadow-color')};\n" +
      "  --shadow-strength: #{map-get($theme-values, 'shadow-strength')};\n" +
      "}\n";

    @if ($theme == 'dark') {
      $output: $output +
        "@media (prefers-color-scheme: dark) {\n" +
        "  " + $selector-output +
        "    --shadow-color: #{map-get($theme-values, 'shadow-color')};\n" +
        "    --shadow-strength: #{map-get($theme-values, 'shadow-strength')};\n" +
        "  }\n" +
        "}\n";
    }
  }

  @return $output;
}
